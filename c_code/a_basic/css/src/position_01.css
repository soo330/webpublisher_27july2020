@charset "utf-8";
/* 0925 position_01.css */


/* reset.css */
html, body {margin: 0;}
h1, h2, h3, h4, h5, h6, p {margin: 0;}
ul, li, ol, dl, dt, dd {margin: 0; padding: 0; list-style: none;}
/* 먼저 셋팅해놓고 시작하면 편하다 */

/* common.css */
.clearfix:after,
.clearfix::after{content: ""; display: block; clear: both;}
/* float 처리했을때 clear 처리해서 부모의 높이값이 auto일 경우에
size를 가질 수있게끔 하는 것 */

/* layout.css */

#wrap {
  width: 800px; height: 5000px; margin: auto;
  background-color: rgba(250,230,230,0.5);
  background-image:linear-gradient(rgba(250,230,230,0.5), #fca #accfff);}
/*  구형브라우저에서는 background-image가 먹지 않을 수도 있으므로 최소한 background-color를 써서 보험들기 */


.position {width: 80%; height: 150px; margin:auto; border: 1px solid #333;}

.position > ul {width: 100%; height: 100%;}
.position > ul > li {
  float: left; width: 100px; height: 100px; border: 2px solid #fac; box-sizing: border-box; text-align: center; font-weight: bold; line-height: 100px; font-size: 1.2rem;}

  /* box-sizing을 쓰면 border의 안쪽으로 선(박스)가 생긴다는 의미 */

.default {background-color: #a0f;}
.static {background-color: #98E5A1;}
.fixed {background-color: #09f;}
.absolute {background-color: #fa0;}
.relative {background-color: #66822C;}

/* =============================================== */
/*
{position:fixed}
browser기준으로 위치를 잡는다
(top, left, right, bottom, z-index)
---
{position:absolute}
부모/ 조상이 되는 위치에
다른 position을 기준으로 잡는다
(top, left, right, bottom, z-index)
absolute의 부모는 absolute가 될 수 있으며
단 static 제외한 다른 아이들을 부모로 가질 수 있다.

---
{position:relative}
자신을 기준으로 위치를 잡는다
(단, z-index는 조상의 기준으로 잡는다)
(top, left, right, bottom, z-index)
---
{z-index:n;}
z-index의 n값은 기본 0;으로 잡는다 -1, 0, 1(단위 없음)


**** position:

* :static- 가장 기본형으로 top,left,right,bottom,z-index 모두 적용불가
* :fixed- 화면상의 고정처리 된것 처럼 표현하는 형태로 기준은 browser이며,
          top,left,right,bottom,z-index 모두 사용 가능하다
          가급적, top/bottom left/right처럼 반대개념으로 잡히는 경우는
          주의 하여 사용해야 한다. (right-left 썼을떄 left먼저 잡힘)
* :absolute- 기준이 존재하지 않으면: browser를 기준으로 위치,
            기준이 존재하면 (absolute, relative, fixed): 해당 요소를 기준으로 위치하게 된다.
            top,left,right,bottom,z-index 모두 사용이 가능하다.
* :relative - 자신의 기준으로 위치를 이동할 수 있으며,
              top,left,right,bottom,z-index 등
              주변 요소에 영향을 미치지 않는다

* {z-index : n;} - position요소의 앞/뒤에 위치를 잡아주는 형태로써,
          '-'마이너스  값을 사용하면 선택하기 어려울 수있다
          단, 기준이 되는 요소에서 +인지/-인지에 따라 내부에 요소는 z-index값이 달라질 수 있다.


*/

.position > ul {position: relative; z-index: 1;}
/* 부모격의 z-index 값이 +1일 경우 자식의 z-index -마이너스 값이
더이상 마이너스로써 존재하지 않을 수 있다 */
.static {
  position:static; 
}

.fixed {
  position:fixed; top: 0; bottom:0; right: 100px; z-index: -1;}
  /* fixed browser를 기준으로  
  fixed는 따로 값을 주지 않는다면 부모의 값을 따라가게 된다
  fixed에 right 100px을 주면 오른쪽 기준으로 100px 떨어진 곳에 생김
  top/bottom 
  */
  
  /* z-index는 단위가 없다 */
.absolute {
  position: absolute; top: 250px; right: 50px; z-index: 1;}
/* fixed의 z-index값이0일때 absolute도 0이 되는데
fixed의 z-index값을 1이라고 했을때 fixed가 앞으로 온다
*/

.relative {
  position: relative; top: 50px; left: -30px; z-index: -1;}

